% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run_treeppl.R
\name{run_treeppl}
\alias{run_treeppl}
\title{Compile and run a TreePPL program}
\usage{
run_treeppl(
  source,
  data_path,
  method = "smc-bpf",
  samples = 1000,
  chains = 1,
  out_path = NULL,
  name_exe = "out",
  sample_freq = NULL
)
}
\arguments{
\item{source}{File path to TreePPL source program.}

\item{data_path}{Complete path to JSON file with input data. Created by \code{treeppl_input()}.}

\item{method}{Inference method to be used.}

\item{samples}{The number of samples/particles during inference. Default is 1000 samples.}

\item{chains}{The number of chains/sweeps. Each chain will contain the number of samples passed in \code{samples}. Default is 1 chain.}

\item{out_path}{Path to JSON file outputed by TreePPL.}

\item{name_exe}{Name of the executable compiled from \code{source}.}

\item{sample_freq}{For each sweep/chain, sample one particle/sample every \code{sample_freq} particles/samples.}
}
\value{
A data frame with sampled values, log weights, normalized weights, and the normalizing constant for all samples.
}
\description{
Compile and run a TreePPL program
}
\examples{
\dontrun{
  coinflips <- tibble(coinflips = sample(c(TRUE, FALSE), 20, replace = TRUE))
.  input <- treeppl_input(coinflips)
  output <- run_treeppl(source = paste0(system.file("extdata", package = "treepplr"),"/coin.tppl"),
                        data_path = input,
                        samples = 10)
}
}
